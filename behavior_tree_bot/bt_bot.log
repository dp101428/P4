DEBUG:root:setting up tree
DEBUG:root:roots are set up
DEBUG:root:defensive plan is created
DEBUG:root:defensive plan is created
DEBUG:root:defensive plan is created
DEBUG:root:defensive plan is created
DEBUG:root:offensive plan is created
DEBUG:root:spread plan is created
INFO:root:
Sequence: Defensive and Origional Root
| Selector: High Level Ordering of Strategies
| | Sequence: Offensive Strategy
| | | Check: have_largest_fleet
| | | Action: attack_strongest_enemy_planet
| | Sequence: Spread Strategy
| | | Check: if_neutral_planet_available
| | | Action: spread_to_highest_producer
| | Action: attack_strongest_enemy_planet
| Sequence: Deffensive Strategy
| | Check: has_multiple_planets
| | Action: defend_planets

DEBUG:root:Executing:Sequence: Defensive and Origional Root
DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_highest_producer
DEBUG:root:Order:1 0 62.0
DEBUG:root:Result: Action: spread_to_highest_producer -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Executing:Sequence: Deffensive Strategy
DEBUG:root:Executing:Check: has_multiple_planets
DEBUG:root:Result: Check: has_multiple_planets -> Failure
DEBUG:root:Result: Sequence: Deffensive Strategy -> Failure
DEBUG:root:Result: Sequence: Defensive and Origional Root -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Sequence: Defensive and Origional Root
DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_highest_producer
DEBUG:root:Order:1 20 8.0
DEBUG:root:Result: Action: spread_to_highest_producer -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Executing:Sequence: Deffensive Strategy
DEBUG:root:Executing:Check: has_multiple_planets
DEBUG:root:Result: Check: has_multiple_planets -> Failure
DEBUG:root:Result: Sequence: Deffensive Strategy -> Failure
DEBUG:root:Result: Sequence: Defensive and Origional Root -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Sequence: Defensive and Origional Root
DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_highest_producer
DEBUG:root:Order:1 19 8.0
DEBUG:root:Result: Action: spread_to_highest_producer -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Executing:Sequence: Deffensive Strategy
DEBUG:root:Executing:Check: has_multiple_planets
DEBUG:root:Result: Check: has_multiple_planets -> Failure
DEBUG:root:Result: Sequence: Deffensive Strategy -> Failure
DEBUG:root:Result: Sequence: Defensive and Origional Root -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Sequence: Defensive and Origional Root
DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_highest_producer
DEBUG:root:Order:1 6 5.0
DEBUG:root:Result: Action: spread_to_highest_producer -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Executing:Sequence: Deffensive Strategy
DEBUG:root:Executing:Check: has_multiple_planets
DEBUG:root:Result: Check: has_multiple_planets -> Failure
DEBUG:root:Result: Sequence: Deffensive Strategy -> Failure
DEBUG:root:Result: Sequence: Defensive and Origional Root -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Sequence: Defensive and Origional Root
DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_highest_producer
DEBUG:root:Order:1 5 5.0
DEBUG:root:Result: Action: spread_to_highest_producer -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Executing:Sequence: Deffensive Strategy
DEBUG:root:Executing:Check: has_multiple_planets
DEBUG:root:Result: Check: has_multiple_planets -> Failure
DEBUG:root:Result: Sequence: Deffensive Strategy -> Failure
DEBUG:root:Result: Sequence: Defensive and Origional Root -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Sequence: Defensive and Origional Root
DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_highest_producer
DEBUG:root:Order:1 4 13.0
DEBUG:root:Result: Action: spread_to_highest_producer -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Executing:Sequence: Deffensive Strategy
DEBUG:root:Executing:Check: has_multiple_planets
DEBUG:root:Result: Check: has_multiple_planets -> Success
DEBUG:root:Executing:Action: defend_planets
DEBUG:root:in defend planets
DEBUG:root:Result: Action: defend_planets -> Success
DEBUG:root:Result: Sequence: Deffensive Strategy -> Success
DEBUG:root:Result: Sequence: Defensive and Origional Root -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Sequence: Defensive and Origional Root
DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_strongest_enemy_planet
DEBUG:root:Result: Action: attack_strongest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_highest_producer
DEBUG:root:Order:1 3 13.0
DEBUG:root:Result: Action: spread_to_highest_producer -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Executing:Sequence: Deffensive Strategy
DEBUG:root:Executing:Check: has_multiple_planets
DEBUG:root:Result: Check: has_multiple_planets -> Success
DEBUG:root:Executing:Action: defend_planets
DEBUG:root:in defend planets
DEBUG:root:Result: Action: defend_planets -> Success
DEBUG:root:Result: Sequence: Deffensive Strategy -> Success
DEBUG:root:Result: Sequence: Defensive and Origional Root -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Sequence: Defensive and Origional Root
DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_strongest_enemy_planet
DEBUG:root:Result: Action: attack_strongest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_highest_producer
DEBUG:root:Result: Action: spread_to_highest_producer -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Action: attack_strongest_enemy_planet
DEBUG:root:Result: Action: attack_strongest_enemy_planet -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Result: Sequence: Defensive and Origional Root -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Sequence: Defensive and Origional Root
DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_strongest_enemy_planet
DEBUG:root:Result: Action: attack_strongest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_highest_producer
DEBUG:root:Result: Action: spread_to_highest_producer -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Action: attack_strongest_enemy_planet
DEBUG:root:Result: Action: attack_strongest_enemy_planet -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Result: Sequence: Defensive and Origional Root -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Sequence: Defensive and Origional Root
DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_highest_producer
DEBUG:root:Result: Action: spread_to_highest_producer -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Action: attack_strongest_enemy_planet
DEBUG:root:Result: Action: attack_strongest_enemy_planet -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Result: Sequence: Defensive and Origional Root -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Sequence: Defensive and Origional Root
DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_highest_producer
DEBUG:root:Result: Action: spread_to_highest_producer -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Action: attack_strongest_enemy_planet
DEBUG:root:Result: Action: attack_strongest_enemy_planet -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Result: Sequence: Defensive and Origional Root -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Sequence: Defensive and Origional Root
DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_highest_producer
DEBUG:root:Order:1 10 39.0
DEBUG:root:Result: Action: spread_to_highest_producer -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Executing:Sequence: Deffensive Strategy
DEBUG:root:Executing:Check: has_multiple_planets
DEBUG:root:Result: Check: has_multiple_planets -> Success
DEBUG:root:Executing:Action: defend_planets
DEBUG:root:in defend planets
ERROR:root:Error in bot.
Traceback (most recent call last):
  File "behavior_tree_bot/bt_bot.py", line 74, in <module>
    do_turn(planet_wars)
  File "behavior_tree_bot/bt_bot.py", line 62, in do_turn
    behavior_tree.execute(planet_wars)
  File "C:\Users\twari\Desktop\P4\behavior_tree_bot\bt_nodes.py", line 8, in logged_fn
    result = fn(self, state)
  File "C:\Users\twari\Desktop\P4\behavior_tree_bot\bt_nodes.py", line 63, in execute
    continue_execution = child_node.execute(state)
  File "C:\Users\twari\Desktop\P4\behavior_tree_bot\bt_nodes.py", line 8, in logged_fn
    result = fn(self, state)
  File "C:\Users\twari\Desktop\P4\behavior_tree_bot\bt_nodes.py", line 63, in execute
    continue_execution = child_node.execute(state)
  File "C:\Users\twari\Desktop\P4\behavior_tree_bot\bt_nodes.py", line 8, in logged_fn
    result = fn(self, state)
  File "C:\Users\twari\Desktop\P4\behavior_tree_bot\bt_nodes.py", line 89, in execute
    return self.action_function(state)
  File "C:\Users\twari\Desktop\P4\behavior_tree_bot\behaviors.py", line 64, in defend_planets
    my_planets[planet].sort(key = lambda f: f.turns_remaining)
  File "C:\Users\twari\Desktop\P4\behavior_tree_bot\behaviors.py", line 64, in <lambda>
    my_planets[planet].sort(key = lambda f: f.turns_remaining)
AttributeError: 'bool' object has no attribute 'turns_remaining'
